<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
	x:Class="Crypto_DCA_Calculator_MobileApp.Views.DcaSimulatorAdvancedView"
	xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
	xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:chart="clr-namespace:Syncfusion.Maui.Charts;assembly=Syncfusion.Maui.Charts"
	xmlns:converters="clr-namespace:Crypto_DCA_Calculator_MobileApp.Converters"
	xmlns:core="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
	xmlns:dataGrid="clr-namespace:Syncfusion.Maui.DataGrid;assembly=Syncfusion.Maui.DataGrid"
	xmlns:datePicker="clr-namespace:Syncfusion.Maui.Picker;assembly=Syncfusion.Maui.Picker"
	xmlns:inputs="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
	xmlns:popup="clr-namespace:Syncfusion.Maui.Popup;assembly=Syncfusion.Maui.Popup"
	BackgroundColor="Black"
	Shell.NavBarIsVisible="False">
	<ContentPage.Resources>
		<ResourceDictionary>
			<Style TargetType="Label">
				<Setter Property="Margin" Value="5,0,0,0" />
				<Setter Property="FontFamily" Value="Font1" />
				<Setter Property="FontAttributes" Value="Bold" />
			</Style>
			<Style TargetType="inputs:SfComboBox">
				<Setter Property="ShowBorder" Value="False" />
				<Setter Property="FontFamily" Value="Font1" />
				<Setter Property="FontAttributes" Value="Bold" />
				<Setter Property="IsClearButtonVisible" Value="False" />
			</Style>
			<Style TargetType="Button">
				<Setter Property="CornerRadius" Value="12" />
				<Setter Property="FontFamily" Value="Font1" />
				<Setter Property="FontAttributes" Value="Bold" />
				<Setter Property="TextColor" Value="White" />
			</Style>
			<converters:NullToBoolConverter x:Key="NullToBoolConverter" />
		</ResourceDictionary>
	</ContentPage.Resources>
	<ScrollView>
		<StackLayout Orientation="Vertical">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Label
					Margin="0,20,0,0"
					FontSize="25"
					HorizontalOptions="Center"
					Text="Crypto DCA Calculator" />
				<Grid
					Grid.Row="1"
					Margin="0,50,0,0"
					ColumnSpacing="10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<StackLayout Orientation="Vertical">
						<Label FontSize="15" Text="Choose crypto" />
						<Border StrokeShape="RoundRectangle 12">
							<inputs:SfComboBox
								DisplayMemberPath="Name"
								ItemsSource="{Binding CryptoCurrencies}"
								SelectedItem="{Binding DcaSimulationInput.CryptoCoin}" />
						</Border>
					</StackLayout>
					<StackLayout Grid.Column="1" Orientation="Vertical">
						<Label FontSize="15" Text="Monthly investment" />
						<Border StrokeShape="RoundRectangle 12">
							<Entry
								BackgroundColor="white"
								FontAttributes="Bold"
								FontFamily="Font1"
								Keyboard="Numeric"
								Text="{Binding DcaSimulationInput.MonthlyAmount}"
								TextColor="Black" />
						</Border>
					</StackLayout>
				</Grid>
				<Grid
					Grid.Row="2"
					Margin="0,30,0,0"
					ColumnSpacing="10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<StackLayout Orientation="Vertical">
						<Label FontSize="17" Text="Start Date" />
						<Border
							Background="White"
							StrokeShape="RoundRectangle 12"
							StrokeThickness="0">
							<datePicker:SfDatePicker
								x:Name="startDatePicker"
								Format="MM_yyyy"
								Mode="Dialog"
								SelectedDate="{Binding SelectedStartDate, Mode=TwoWay}"
								TextDisplayMode="Fade" />
						</Border>
						<Border
							Background="White"
							StrokeShape="RoundRectangle 12"
							StrokeThickness="0">
							<Label
								Margin="10"
								BackgroundColor="White"
								Text="{Binding SelectedStartMonthYear}"
								TextColor="Black">
								<Label.GestureRecognizers>
									<TapGestureRecognizer Tapped="OpenStartDatePicker" />
								</Label.GestureRecognizers>
							</Label>
						</Border>
					</StackLayout>
					<StackLayout Grid.Column="1" Orientation="Vertical">
						<Label FontSize="17" Text="Invest day" />
						<Border StrokeShape="RoundRectangle 12">
							<inputs:SfComboBox ItemsSource="{Binding DaysToChooseFrom}" SelectedItem="{Binding DcaSimulationInput.InvestDayOfTheMonth}" />
						</Border>
					</StackLayout>
					<StackLayout Grid.Column="2" Orientation="Vertical">
						<Label FontSize="17" Text="End Date" />
						<Border
							Background="White"
							StrokeShape="RoundRectangle 12"
							StrokeThickness="0">
							<datePicker:SfDatePicker
								x:Name="endDatePicker"
								Format="MM_yyyy"
								Mode="Dialog"
								SelectedDate="{Binding SelectedEndDate, Mode=TwoWay}"
								TextDisplayMode="Fade" />
						</Border>
						<Border
							Background="White"
							StrokeShape="RoundRectangle 12"
							StrokeThickness="0">
							<Label
								Margin="10"
								BackgroundColor="White"
								Text="{Binding SelectedEndMonthYear}"
								TextColor="Black">
								<Label.GestureRecognizers>
									<TapGestureRecognizer Tapped="OpenEndDatePicker" />
								</Label.GestureRecognizers>
							</Label>
						</Border>
					</StackLayout>
				</Grid>
				<Grid
					Grid.Row="3"
					Margin="0,30,0,0"
					ColumnSpacing="10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Button
						BackgroundColor="Green"
						Command="{Binding AddCryptoCommand}"
						Text="Add crypto" />
					<Button
						Grid.Column="1"
						BackgroundColor="Blue"
						Command="{Binding CalculateDataCommand}"
						Text="Calculate" />
					<Button
						Grid.Column="2"
						BackgroundColor="Gray"
						Clicked="Button_Clicked"
						Command="{Binding ShowHelpCommand}"
						Text="Need help?" />
				</Grid>
			</Grid>

			<popup:SfPopup
				x:Name="sfPopup"
				AnimationMode="Zoom"
				Message="1. Choose crypto from the list -&gt; 2.Input a monthly investment -&gt; 3.Select the start date -&gt; 4.Select the day of the month -&gt; 5. Select the end date -&gt; 6. Press Add Crypto ---&gt; You can repeat this process for more coins, when you're done press Calculate "
				ShowHeader="False" />
			<core:SfBusyIndicator
				AnimationType="DoubleCircle"
				HeightRequest="50"
				IndicatorColor="White"
				IsRunning="{Binding IsBusy}"
				IsVisible="{Binding IsBusy}" />

			<!--  Data Grid Result  -->
			<Grid Margin="0,50,0,20">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Label
					FontSize="13 "
					HorizontalOptions="Start"
					Text="To see the results you need to select a coin from the next dropdown"
					TextColor="White" />
				<Border Grid.Column="1" StrokeShape="RoundRectangle 12">
					<inputs:SfComboBox
						DisplayMemberPath="Name"
						ItemsSource="{Binding SelectedCryptoCurrencies}"
						SelectedItem="{Binding SelectedCryptoCurrency}" />
				</Border>
			</Grid>
			<StackLayout IsVisible="{Binding SelectedCryptoCurrency, Converter={StaticResource NullToBoolConverter}}" Orientation="Vertical">
				<Border
					Background="White"
					StrokeShape="RoundRectangle 12"
					StrokeThickness="0">
					<dataGrid:SfDataGrid
						ColumnWidthMode="None"
						EnableDataVirtualization="True"
						FrozenColumnCount="1"
						GridLinesVisibility="Both"
						HeaderGridLinesVisibility="Both"
						HeaderRowHeight="100"
						ItemsSource="{Binding DcaSimListResult}"
						MaximumHeightRequest="400">
						<dataGrid:SfDataGrid.Columns>
							<dataGrid:DataGridTextColumn
								HeaderText="Date"
								HeaderTextAlignment="Center"
								LoadUIView="False"
								MappingName="Date" />
							<dataGrid:DataGridNumericColumn
								CellTextAlignment="Center"
								HeaderText="Invested Amount"
								HeaderTextAlignment="Center"
								LoadUIView="False"
								MappingName="InvestedAmount" />
							<dataGrid:DataGridNumericColumn
								CellTextAlignment="Center"
								HeaderText="Crypto Currency Amount"
								HeaderTextAlignment="Center"
								LoadUIView="False"
								MappingName="CryptoCurrencyAmount" />
							<dataGrid:DataGridNumericColumn
								CellTextAlignment="Center"
								HeaderText="Value Today"
								HeaderTextAlignment="Center"
								LoadUIView="False"
								MappingName="ValueToday" />
							<dataGrid:DataGridTextColumn
								CellTextAlignment="Center"
								HeaderText="ROI"
								HeaderTextAlignment="Center"
								LoadUIView="False"
								MappingName="ROI" />
						</dataGrid:SfDataGrid.Columns>
					</dataGrid:SfDataGrid>
				</Border>

				<Label
					Margin="0,50,0,0"
					FontSize="13"
					HorizontalOptions="Start"
					Text="ROI Chart:"
					TextColor="White" />
				<Border Grid.Column="1" StrokeShape="RoundRectangle 12">
					<chart:SfCartesianChart BackgroundColor="White" MaximumHeightRequest="400">
						<chart:SfCartesianChart.XAxes>
							<chart:CategoryAxis />
						</chart:SfCartesianChart.XAxes>
						<chart:SfCartesianChart.YAxes>
							<chart:NumericalAxis />
						</chart:SfCartesianChart.YAxes>
						<chart:LineSeries
							ItemsSource="{Binding DcaSimListResult}"
							ShowMarkers="True"
							XBindingPath="Date"
							YBindingPath="ROI" />
					</chart:SfCartesianChart>
				</Border>

				<Label
					Margin="0,50,0,0"
					FontSize="13"
					HorizontalOptions="Start"
					Text="Invested vs Value today Chart:"
					TextColor="White" />
				<Border Grid.Column="1" StrokeShape="RoundRectangle 12">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<chart:SfCartesianChart BackgroundColor="White">
							<chart:SfCartesianChart.XAxes>
								<chart:CategoryAxis />
							</chart:SfCartesianChart.XAxes>
							<chart:SfCartesianChart.YAxes>
								<chart:NumericalAxis />
							</chart:SfCartesianChart.YAxes>
							<chart:ColumnSeries
								ItemsSource="{Binding DcaSimListResult}"
								XBindingPath="Date"
								YBindingPath="InvestedAmount" />
						</chart:SfCartesianChart>

						<chart:SfCartesianChart Grid.Column="1" BackgroundColor="White">
							<chart:SfCartesianChart.XAxes>
								<chart:CategoryAxis />
							</chart:SfCartesianChart.XAxes>
							<chart:SfCartesianChart.YAxes>
								<chart:NumericalAxis />
							</chart:SfCartesianChart.YAxes>
							<chart:ColumnSeries
								ItemsSource="{Binding DcaSimListResult}"
								XBindingPath="Date"
								YBindingPath="ValueToday" />
						</chart:SfCartesianChart>
					</Grid>
				</Border>

				<!--  TODO -> needs a separate service to calculat the right balance of the crypto amount  -->
				<!--<chart:SfCircularChart>
					<chart:SfCircularChart.Resources>
						<DataTemplate x:Key="labelTemplate">
							<HorizontalStackLayout Spacing="5">
								<Label
									FontSize="13"
									Text="{Binding Item.Name}"
									TextColor="White" />
								<Label
									FontSize="13"
									Text=" : "
									TextColor="White" />
								<Label
									FontSize="13"
									Text="{Binding Item.Amount}"
									TextColor="White" />
							</HorizontalStackLayout>
						</DataTemplate>
					</chart:SfCircularChart.Resources>
					<chart:PieSeries
						ItemsSource="{Binding CryptoAmounts}"
						LabelTemplate="{StaticResource labelTemplate}"
						ShowDataLabels="True"
						XBindingPath="Name"
						YBindingPath="Amount" />
				</chart:SfCircularChart>-->
			</StackLayout>
		</StackLayout>
	</ScrollView>
</ContentPage>